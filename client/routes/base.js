// Generated by CoffeeScript 1.6.3
var _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Router.configure({
  layout: 'layout',
  notFoundTemplate: 'errors404',
  loadingTemplate: 'loading',
  before: function() {
    if (Meteor.user() || _.include(['home', 'postsIndex', 'postsShowWithAuth'], this.context.route.name)) {
      return;
    }
    if (Meteor.loggingIn()) {
      return this.render('loading');
    } else {
      this.render('accessDenied');
      return this.stop();
    }
  }
});

Router.map(function() {
  return this.route('home', {
    path: '/',
    controller: 'HomeController',
    action: 'home',
    data: function() {
      var fids, pids, userId, _ref;
      if (!(userId = (_ref = User.current()) != null ? _ref.id : void 0)) {
        return {};
      }
      fids = _.pluck(Dyad.where({
        userId: userId
      }), 'friendId');
      pids = _.pluck(Subscription.where({
        userId: {
          $in: fids
        }
      }), 'postId');
      return Post.find({
        _id: {
          $in: pids
        }
      }, {
        sort: {
          createdAt: -1
        }
      });
    }
  });
});

this.HomeController = (function(_super) {
  __extends(HomeController, _super);

  function HomeController() {
    _ref = HomeController.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  HomeController.prototype.home = function() {
    return this.render(User.current() ? 'home' : 'welcome');
  };

  return HomeController;

})(RouteController);

/*
//@ sourceMappingURL=base.map
*/
